{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","utils/usersId.ts","components/Form/Form.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","title","completed","id","TodoList","todos","map","username","getUserById","userId","users","find","Form","onSubmit","useState","setTitle","titleErrorMassege","setTitleErrorMassege","setUserId","userErrorMassege","setUserErrorMassege","event","preventDefault","trimmedTitle","trim","action","method","htmlFor","type","placeholder","value","onChange","target","disabled","initialTodos","getNewTodoId","newTodos","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2de74490.chunk.js","sourcesContent":["import { User } from '../../interface/User';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../interface/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title, completed, id, user,\n  } = todo;\n\n  return (\n    <article data-id={id} className={`TodoInfo ${completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../interface/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import users from '../api/users';\n\nexport interface User {\n  id: number,\n  name: string,\n  username: string,\n  email: string,\n}\n\nexport const getUserById = (userId: number): User | null => {\n  return users.find(user => user.id === userId) || null;\n};\n","import React, { useState } from 'react';\nimport users from '../../api/users';\nimport { Todo } from '../../interface/Todo';\nimport { getUserById } from '../../utils/usersId';\n\ninterface Props {\n  onSubmit: (todo: Todo) => void\n}\n\nexport const Form: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [titleErrorMassege, setTitleErrorMassege] = useState('');\n\n  const [userId, setUserId] = useState(0);\n  const [userErrorMassege, setUserErrorMassege] = useState('');\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleErrorMassege('');\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserErrorMassege('');\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setTitleErrorMassege('');\n    setUserErrorMassege('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle) {\n      setTitleErrorMassege('Please enter a title');\n    }\n\n    if (!userId) {\n      setUserErrorMassege('Please choose a user');\n    }\n\n    if (!trimmedTitle || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      action=\"/api/todos\"\n      method=\"POST\"\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleId\">Title:</label>\n        <input\n          id=\"titleId\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {titleErrorMassege && (\n          <span className=\"error\">{titleErrorMassege}</span>\n        )}\n\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"user\">User:</label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"user\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(user => (\n            <option\n              key={user.id}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n\n        </select>\n\n        {userErrorMassege\n          && (<span className=\"error\">{userErrorMassege}</span>)}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport todos from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './interface/Todo';\nimport { Form } from './components/Form/Form';\nimport { getUserById } from './utils/usersId';\n\nexport const initialTodos: Todo[] = todos.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(newTodos: Todo[]) {\n  const maxId = Math.max(...newTodos.map((todo) => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [newTodos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(newTodos),\n    };\n\n    setTodos((currentTodos) => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form onSubmit={addTodo} />\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}